{
  "info": {
    "name": "Phishy Backend - Role-Based Routing API",
    "description": "Complete API collection for testing role-based authentication and authorization",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User (Public)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"student\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/register",
              "host": ["{{base_url}}"],
              "path": ["users", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('user_id', response.userid);",
                  "    console.log('User registered with ID:', response.userid);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Admin User (Public)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/register",
              "host": ["{{base_url}}"],
              "path": ["users", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/login",
              "host": ["{{base_url}}"],
              "path": ["users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('user_id', response.user.userid);",
                  "    console.log('Login successful, token saved');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/login",
              "host": ["{{base_url}}"],
              "path": ["users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('user_id', response.user.userid);",
                  "    console.log('Admin login successful, token saved');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management (Student Role)",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/me/",
              "host": ["{{base_url}}"],
              "path": ["users", "me", ""]
            }
          }
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updated_username\",\n  \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/me/",
              "host": ["{{base_url}}"],
              "path": ["users", "me", ""]
            }
          }
        },
        {
          "name": "Get Specific User (Should work if own profile)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Get All Users (Should fail - 403 Forbidden)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Management",
      "item": [
        {
          "name": "Get All Users (Admin Only)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "stats"]
            }
          }
        },
        {
          "name": "Get All Users (Admin Panel)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"]
            }
          }
        },
        {
          "name": "Get Users by Role",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/role/student",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "role", "student"]
            }
          }
        },
        {
          "name": "Get Users by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/status/active",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "status", "active"]
            }
          }
        },
        {
          "name": "Get Specific User (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Update User (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin_updated_username\",\n  \"email\": \"admin_updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Change User Role",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}/role/admin",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}", "role", "admin"]
            }
          }
        },
        {
          "name": "Change User Status",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}/status/suspended",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}", "status", "suspended"]
            }
          }
        },
        {
          "name": "Get My Admin Role",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/my-role",
              "host": ["{{base_url}}"],
              "path": ["admin", "my-role"]
            }
          }
        }
      ]
    },
    {
      "name": "Security Tests",
      "item": [
        {
          "name": "Access Without Token (Should fail - 401)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/me/",
              "host": ["{{base_url}}"],
              "path": ["users", "me", ""]
            }
          }
        },
        {
          "name": "Access with Invalid Token (Should fail - 401)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/me/",
              "host": ["{{base_url}}"],
              "path": ["users", "me", ""]
            }
          }
        },
        {
          "name": "Student Access Admin Endpoint (Should fail - 403)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "stats"]
            }
          }
        },
        {
          "name": "Access Another User's Data (Should fail - 403)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/other_user_id",
              "host": ["{{base_url}}"],
              "path": ["users", "other_user_id"]
            }
          }
        }
      ]
    },
    {
      "name": "Game & Learning Path",
      "item": [
        {
          "name": "Get Top Scores (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/game/scores/top",
              "host": ["{{base_url}}"],
              "path": ["game", "scores", "top"]
            }
          }
        },
        {
          "name": "Create Game Progress",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"level\": 1,\n  \"current_score\": 100,\n  \"highest_score\": 100,\n  \"enemies_defeated\": 5,\n  \"chests_collected\": 2,\n  \"time_played\": 120.5,\n  \"completed\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/game/progress/",
              "host": ["{{base_url}}"],
              "path": ["game", "progress", ""]
            }
          }
        },
        {
          "name": "Get My Game Progress",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/game/progress/",
              "host": ["{{base_url}}"],
              "path": ["game", "progress", ""]
            }
          }
        },
        {
          "name": "Create Learning Path",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topic\": \"Phishing Awareness\",\n  \"subtopic\": \"Email Security\",\n  \"score\": 85.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/learning-path/",
              "host": ["{{base_url}}"],
              "path": ["learning-path", ""]
            }
          }
        },
        {
          "name": "Get My Learning Paths",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/learning-path/",
              "host": ["{{base_url}}"],
              "path": ["learning-path", ""]
            }
          }
        },
        {
          "name": "Get User Learning Paths (Admin or Own)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/learning-path/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["learning-path", "{{user_id}}"]
            }
          }
        }
      ]
    }
  ]
}
